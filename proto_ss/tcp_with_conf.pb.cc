// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcp_with_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tcp_with_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TcpHead {

namespace {

const ::google::protobuf::Descriptor* Head_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Head_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Head_HeadInfo_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Head_MessageType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* Conf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Conf_reflection_ = NULL;
const ::google::protobuf::Descriptor* Connect_conf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Connect_conf_reflection_ = NULL;
const ::google::protobuf::Descriptor* PingPong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PingPong_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PingPong_PingType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_tcp_5fwith_5fconf_2eproto() {
  protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "tcp_with_conf.proto");
  GOOGLE_CHECK(file != NULL);
  Head_descriptor_ = file->message_type(0);
  static const int Head_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Head, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Head, message_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Head, message_type_),
  };
  Head_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Head_descriptor_,
      Head::default_instance_,
      Head_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Head, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Head, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Head));
  Head_HeadInfo_descriptor_ = Head_descriptor_->enum_type(0);
  Head_MessageType_descriptor_ = Head_descriptor_->enum_type(1);
  Data_descriptor_ = file->message_type(1);
  static const int Data_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, info_),
  };
  Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Data_descriptor_,
      Data::default_instance_,
      Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Data));
  Conf_descriptor_ = file->message_type(2);
  static const int Conf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Conf, message_id_),
  };
  Conf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Conf_descriptor_,
      Conf::default_instance_,
      Conf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Conf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Conf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Conf));
  Connect_conf_descriptor_ = file->message_type(3);
  static const int Connect_conf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Connect_conf, servertime_),
  };
  Connect_conf_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Connect_conf_descriptor_,
      Connect_conf::default_instance_,
      Connect_conf_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Connect_conf, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Connect_conf, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Connect_conf));
  PingPong_descrSendPictureiptor_ = file->message_type(4);
  static const int PingPong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingPong, ping_type_),
  };
  PingPong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PingPong_descriptor_,
      PingPong::default_instance_,
      PingPong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingPong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingPong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PingPong));
  PingPong_PingType_descriptor_ = PingPong_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_tcp_5fwith_5fconf_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Head_descriptor_, &Head::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Data_descriptor_, &Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Conf_descriptor_, &Conf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Connect_conf_descriptor_, &Connect_conf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PingPong_descriptor_, &PingPong::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_tcp_5fwith_5fconf_2eproto() {
  delete Head::default_instance_;
  delete Head_reflection_;
  delete Data::default_instance_;
  delete Data_reflection_;
  delete Conf::default_instance_;
  delete Conf_reflection_;
  delete Connect_conf::default_instance_;
  delete Connect_conf_reflection_;
  delete PingPong::default_instance_;
  delete PingPong_reflection_;
}

void protobuf_AddDesc_tcp_5fwith_5fconf_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023tcp_with_conf.proto\022\007TcpHead\"\340\001\n\004Head\022"
    "\025\n\nmessage_id\030\001 \002(\007:\0010\022\027\n\014message_size\030\002"
    " \002(\007:\0010\022\027\n\014message_type\030\003 \002(\007:\0011\"B\n\010Head"
    "Info\022\020\n\014Tcp_id_start\020\001\022\020\n\nTcp_id_max\020\377\377\003"
    "\022\022\n\014Tcp_size_max\020\200\240\001\"K\n\013MessageType\022\n\n\006N"
    "ormal\020\001\022\020\n\014Conf_message\020\002\022\014\n\010PingPong\020\003\022"
    "\020\n\014connect_conf\020\004\"\024\n\004Data\022\014\n\004info\030\001 \002(\014\""
    "\032\n\004Conf\022\022\n\nmessage_id\030\001 \002(\005\"\"\n\014Connect_c"
    "onf\022\022\n\nservertime\030\001 \002(\003\"=\n\010PingPong\022\021\n\tp"
    "ing_type\030\001 \002(\005\"\036\n\010PingType\022\010\n\004Ping\020\001\022\010\n\004"
    "Pong\020\002B(\n\033cn.bearhunting.tcp.protocolB\007T"
    "cpHeadH\002", 448);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tcp_with_conf.proto", &protobuf_RegisterTypes);
  Head::default_instance_ = new Head();
  Data::default_instance_ = new Data();
  Conf::default_instance_ = new Conf();
  Connect_conf::default_instance_ = new Connect_conf();
  PingPong::default_instance_ = new PingPong();
  Head::default_instance_->InitAsDefaultInstance();
  Data::default_instance_->InitAsDefaultInstance();
  Conf::default_instance_->InitAsDefaultInstance();
  Connect_conf::default_instance_->InitAsDefaultInstance();
  PingPong::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_tcp_5fwith_5fconf_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_tcp_5fwith_5fconf_2eproto {
  StaticDescriptorInitializer_tcp_5fwith_5fconf_2eproto() {
    protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  }
} static_descriptor_initializer_tcp_5fwith_5fconf_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Head_HeadInfo_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Head_HeadInfo_descriptor_;
}
bool Head_HeadInfo_IsValid(int value) {
  switch(value) {
    case 1:
    case 20480:
    case 65535:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Head_HeadInfo Head::Tcp_id_start;
const Head_HeadInfo Head::Tcp_id_max;
const Head_HeadInfo Head::Tcp_size_max;
const Head_HeadInfo Head::HeadInfo_MIN;
const Head_HeadInfo Head::HeadInfo_MAX;
const int Head::HeadInfo_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Head_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Head_MessageType_descriptor_;
}
bool Head_MessageType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Head_MessageType Head::Normal;
const Head_MessageType Head::Conf_message;
const Head_MessageType Head::PingPong;
const Head_MessageType Head::connect_conf;
const Head_MessageType Head::MessageType_MIN;
const Head_MessageType Head::MessageType_MAX;
const int Head::MessageType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Head::kMessageIdFieldNumber;
const int Head::kMessageSizeFieldNumber;
const int Head::kMessageTypeFieldNumber;
#endif  // !_MSC_VER

Head::Head()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TcpHead.Head)
}

void Head::InitAsDefaultInstance() {
}

Head::Head(const Head& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TcpHead.Head)
}

void Head::SharedCtor() {
  _cached_size_ = 0;
  message_id_ = 0u;
  message_size_ = 0u;
  message_type_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Head::~Head() {
  // @@protoc_insertion_point(destructor:TcpHead.Head)
  SharedDtor();
}

void Head::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Head::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Head::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Head_descriptor_;
}

const Head& Head::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  return *default_instance_;
}

Head* Head::default_instance_ = NULL;

Head* Head::New() const {
  return new Head;
}

void Head::Swap(Head* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Head::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Head_descriptor_;
  metadata.reflection = Head_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Data::kInfoFieldNumber;
#endif  // !_MSC_VER

Data::Data()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TcpHead.Data)
}

void Data::InitAsDefaultInstance() {
}

Data::Data(const Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TcpHead.Data)
}

void Data::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:TcpHead.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete info_;
  }
  if (this != default_instance_) {
  }
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Data_descriptor_;
}

const Data& Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  return *default_instance_;
}

Data* Data::default_instance_ = NULL;

Data* Data::New() const {
  return new Data;
}

void Data::Swap(Data* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Data_descriptor_;
  metadata.reflection = Data_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Conf::kMessageIdFieldNumber;
#endif  // !_MSC_VER

Conf::Conf()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TcpHead.Conf)
}

void Conf::InitAsDefaultInstance() {
}

Conf::Conf(const Conf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TcpHead.Conf)
}

void Conf::SharedCtor() {
  _cached_size_ = 0;
  message_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Conf::~Conf() {
  // @@protoc_insertion_point(destructor:TcpHead.Conf)
  SharedDtor();
}

void Conf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Conf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Conf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Conf_descriptor_;
}

const Conf& Conf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  return *default_instance_;
}

Conf* Conf::default_instance_ = NULL;

Conf* Conf::New() const {
  return new Conf;
}

void Conf::Swap(Conf* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Conf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Conf_descriptor_;
  metadata.reflection = Conf_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Connect_conf::kServertimeFieldNumber;
#endif  // !_MSC_VER

Connect_conf::Connect_conf()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TcpHead.Connect_conf)
}

void Connect_conf::InitAsDefaultInstance() {
}

Connect_conf::Connect_conf(const Connect_conf& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TcpHead.Connect_conf)
}

void Connect_conf::SharedCtor() {
  _cached_size_ = 0;
  servertime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Connect_conf::~Connect_conf() {
  // @@protoc_insertion_point(destructor:TcpHead.Connect_conf)
  SharedDtor();
}

void Connect_conf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Connect_conf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Connect_conf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Connect_conf_descriptor_;
}

const Connect_conf& Connect_conf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  return *default_instance_;
}

Connect_conf* Connect_conf::default_instance_ = NULL;

Connect_conf* Connect_conf::New() const {
  return new Connect_conf;
}

void Connect_conf::Swap(Connect_conf* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata Connect_conf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Connect_conf_descriptor_;
  metadata.reflection = Connect_conf_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PingPong_PingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingPong_PingType_descriptor_;
}
bool PingPong_PingType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PingPong_PingType PingPong::Ping;
const PingPong_PingType PingPong::Pong;
const PingPong_PingType PingPong::PingType_MIN;
const PingPong_PingType PingPong::PingType_MAX;
const int PingPong::PingType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PingPong::kPingTypeFieldNumber;
#endif  // !_MSC_VER

PingPong::PingPong()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TcpHead.PingPong)
}

void PingPong::InitAsDefaultInstance() {
}

PingPong::PingPong(const PingPong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TcpHead.PingPong)
}

void PingPong::SharedCtor() {
  _cached_size_ = 0;
  ping_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PingPong::~PingPong() {
  // @@protoc_insertion_point(destructor:TcpHead.PingPong)
  SharedDtor();
}

void PingPong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PingPong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingPong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PingPong_descriptor_;
}

const PingPong& PingPong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_tcp_5fwith_5fconf_2eproto();
  return *default_instance_;
}

PingPong* PingPong::default_instance_ = NULL;

PingPong* PingPong::New() const {
  return new PingPong;
}

void PingPong::Swap(PingPong* other) {
  if (other != this) {
    GetReflection()->Swap(this, other);}
}

::google::protobuf::Metadata PingPong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PingPong_descriptor_;
  metadata.reflection = PingPong_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace TcpHead

// @@protoc_insertion_point(global_scope)
